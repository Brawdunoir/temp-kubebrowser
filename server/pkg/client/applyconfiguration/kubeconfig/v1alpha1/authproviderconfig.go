/*
Copyright Yann Lacroix.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// AuthProviderConfigApplyConfiguration represents a declarative configuration of the AuthProviderConfig type for use
// with apply.
type AuthProviderConfigApplyConfiguration struct {
	ClientID     *string `json:"client-id,omitempty"`
	ClientSecret *string `json:"client-secret,omitempty"`
	IDToken      *string `json:"id-token,omitempty"`
	IDPIssuerURL *string `json:"idp-issuer-url,omitempty"`
	RefreshToken *string `json:"refresh-token,omitempty"`
}

// AuthProviderConfigApplyConfiguration constructs a declarative configuration of the AuthProviderConfig type for use with
// apply.
func AuthProviderConfig() *AuthProviderConfigApplyConfiguration {
	return &AuthProviderConfigApplyConfiguration{}
}

// WithClientID sets the ClientID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClientID field is set to the value of the last call.
func (b *AuthProviderConfigApplyConfiguration) WithClientID(value string) *AuthProviderConfigApplyConfiguration {
	b.ClientID = &value
	return b
}

// WithClientSecret sets the ClientSecret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClientSecret field is set to the value of the last call.
func (b *AuthProviderConfigApplyConfiguration) WithClientSecret(value string) *AuthProviderConfigApplyConfiguration {
	b.ClientSecret = &value
	return b
}

// WithIDToken sets the IDToken field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IDToken field is set to the value of the last call.
func (b *AuthProviderConfigApplyConfiguration) WithIDToken(value string) *AuthProviderConfigApplyConfiguration {
	b.IDToken = &value
	return b
}

// WithIDPIssuerURL sets the IDPIssuerURL field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IDPIssuerURL field is set to the value of the last call.
func (b *AuthProviderConfigApplyConfiguration) WithIDPIssuerURL(value string) *AuthProviderConfigApplyConfiguration {
	b.IDPIssuerURL = &value
	return b
}

// WithRefreshToken sets the RefreshToken field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RefreshToken field is set to the value of the last call.
func (b *AuthProviderConfigApplyConfiguration) WithRefreshToken(value string) *AuthProviderConfigApplyConfiguration {
	b.RefreshToken = &value
	return b
}
